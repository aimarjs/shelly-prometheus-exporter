name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

env:
  GO_VERSION: "1.25"

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  # Semantic versioning job
  version:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    outputs:
      new_version: ${{ steps.semantic-release.outputs.new_release_version }}
      new_tag: ${{ steps.semantic-release.outputs.new_release_published }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
          repository: ${{ github.repository }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Run semantic-release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 21.1.0
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Create and push tag
        if: steps.semantic-release.outputs.new_release_published == 'true'
        run: |
          git tag ${{ steps.semantic-release.outputs.new_release_version }}
          git push origin ${{ steps.semantic-release.outputs.new_release_version }}

  # Release job
  release:
    runs-on: ubuntu-latest
    needs: [version]
    if: always() && (github.event_name == 'push' || needs.version.outputs.new_tag == 'true')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
